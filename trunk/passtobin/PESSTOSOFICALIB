#!/usr/bin/python

from pyfits import getheader
import string,os,re,math,sys,shutil,glob,time
import ntt
from ntt import efoscphotredudef
from ntt.util import readkey3, readhdr, delete, correctcard
from optparse import OptionParser

description="> make friging and badpixelmask "
usage= "%prog \t  [listframes ]"

if __name__ == "__main__":
     parser = OptionParser(usage=usage,description=description,version="%prog 1.0")
     parser.add_option("-F", "--listflat",dest="listflat",default='',type="str", help='use flats from this list')
     option,args = parser.parse_args()
     if len(args)>1:
          sys.argv.append('--help')
          option,args = parser.parse_args()
     elif len(args)==1:
          files=ntt.util.readlist(args[0])
     else:
          listfile=glob.glob('*fits')
          print('\n### making the list with raw data in the current directory ...... please wait')
          files=[]
          for img in listfile:
               hdr=readhdr(img)
               _object=readkey3(hdr,'object')
               _filter=readkey3(hdr,'filter')
               _type=''
               if img not in [readkey3(hdr,'ARCFILE'),readkey3(hdr,'ORIGFILE')]:
                    _type='not good'
               if not _type and readkey3(hdr,'instrume')!='sofi':
                    _type='not good'
               if not _type:
                    if not _type and _filter.lower() in ['grf','gbf']:
                         _type='spectrum'
                    if not _type and _object.lower() in ['flat','dark','sky']:
                         _type='image'
                    if not _type:
                         if str(readkey3(hdr,'xcum'))!='None' and str(readkey3(hdr,'ycum'))!='None':
                              _type='image'
                    if not _type:
                         print('\n### '+readkey3(hdr,'object'),readkey3(hdr,'filter'),str(readkey3(hdr,'xcum')),str(readkey3(hdr,'ycum')))
                         answ=raw_input('\n### What is it: image,flat,bias,illumin [1], other [2] ? [2] ')
                         if not answ:  answ='2'
                         if answ=='1':     _type='image'
                         elif answ=='2':   _type='not good'
                    if _type=='image': files.append(img)
               print(_type,img,_object,_filter)

     import datetime
     MJDtoday=55927+(datetime.date.today()-datetime.date(2012, 01, 01)).days
     flats={}
     illum={}
     for img in files:
          hdrf=readhdr(img)
          _object=readkey3(hdrf,'object')
          _filter=readkey3(hdrf,'filter')
          _imm=readkey3(hdrf,'tech')
          ID=readkey3(hdrf,'esoid')
          _original=readkey3(hdrf,'ORIGFILE').lower()
          if 'Illum_Correction' in _original or 'illumcorr' in _original or 'ill' in _original:
               if _filter not in illum:      illum[_filter]={}
               if ID not in illum[_filter]:  illum[_filter][ID]=[]
               illum[_filter][ID].append(img)
          elif _object.lower()=='flat' and _filter in ['J','H','Ks']:# and _imm=='IMAGE' or  'SpecialDomeFlats' in readkey3(hdr,'esotplid'):
               if _filter not in flats:      flats[_filter]={}
               if ID not in flats[_filter]:  flats[_filter][ID]=[]
               flats[_filter][ID].append(img)
     _date=readkey3(readhdr(files[0]),'date-night')
     _filter=readkey3(readhdr(files[0]),'filter')
     nameout0='frinmask_'+_date+'_'+_filter+'_'+str(MJDtoday)
     nameout0=ntt.util.name_duplicate(files[0],nameout0,'')
     if option.listflat:
          flats=ntt.util.readlist(option.listflat)
          _doflats=False
     else:    _doflats=True
     listaflat,listaillum=ntt.soficalibdef.doflatsofi(flats,_doflats,illum,nameout0)
########################################################################################
